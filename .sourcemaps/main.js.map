{"version":3,"sources":["../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/providers/users/users.ts","../../src/providers/tasks/tasks.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 112;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 112\n// module chunks = 1","var map = {\n\t\"../pages/tasks/tasks.module\": [\n\t\t279,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 154;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 154\n// module chunks = 1","import { Component } from '@angular/core';\r\nimport { NavController, LoadingController } from 'ionic-angular';//LoadingController muestra un loading mientras hace la peticion\r\n\r\nimport { UsersProvider } from './../../providers/users/users';//traemos el servicio\r\n\r\n@Component({\r\n  selector: 'page-home',\r\n  templateUrl: 'home.html'\r\n})\r\nexport class HomePage {\r\n\r\n  users: any[] = [];//creamos un array de users, hacemos un array de cualquier objeto\r\n\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    private loadingCtrl: LoadingController,//lo inyectamos como dependencia\r\n    private userProvider: UsersProvider//lo inyectamos como dependencia\r\n  ) {\r\n\r\n  }\r\n\r\n  ionViewDidLoad(){//Disparador de ionic, nos dice si la pagina ya esta activa o no, q es como si la pagina ya esta cargada puedo empezar a hacer peticiones a los providers\r\n    const loading = this.loadingCtrl.create({\r\n      content: 'Cargando usuarios'\r\n    });\r\n    loading.present();//presentamos el loading\r\n    //setTimeout(() => {\r\n\r\n      this.userProvider.getAllUsers(20)//carga 20 usuarios haciendo una solicitud\r\n      .subscribe((response: any) => {//me subscribo para obtener la respuesta\r\n        loading.dismiss();//Ocultamos el Loading\r\n        this.users = response.results;//Guardamos los users, q se encuentra en una parte de su respuesta que es results\r\n      });\r\n\r\n    //}, 5000);\r\n    \r\n\r\n  }\r\n\r\n  goToTasksPage(){\r\n    this.navCtrl.push('TasksPage');//Navegamos hacia TasksPage\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n\r\n@Injectable()\r\nexport class UsersProvider {\r\n\r\n  //Inyectamos el httpClient\r\n  constructor(public http: HttpClient) {\r\n  }\r\n\r\n  //Creamos una instancia\r\n  getAllUsers(results: number) {\r\n    //results es un parametro de entrada\r\n    //get con la url a la q le voy a pegar\r\n    return this.http.get(`https://randomuser.me/api/?results=${results}`);\r\n    //https://randomuser.me/documentation\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/users/users.ts","//este servicio se va a encargar de consumir las tareas\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { Task } from './../../models/task.model';//llamamos al modelo de tareas para decir luego al getAll() q me devuelva un Array de tareas\r\n\r\n@Injectable()\r\nexport class TasksProvider {\r\n\r\n  path = 'https://jsonplaceholder.typicode.com/todos';//Esto podriamos tenerlo en environment\r\n\r\n  constructor(public http: HttpClient) {\r\n    console.log('Hello TasksProvider Provider');\r\n  }\r\n\r\n  getAll(){\r\n    //Peticion hacia el empoit\r\n    return this.http.get<Task[]>(`${this.path}`);//Task[] Array de tareas\r\n  }\r\n\r\n  //Update tiene que tener unos parametros que seran el id de la tarea y la data q va a actualizar\r\n  update(task: Task){\r\n    //put para editar y <Task> para q me devuelva una tarea\r\n    return this.http.put<Task>(`${this.path}/${task.id}`, task);//${task.id} es el id q quiero actualizar y task es la data\r\n  }\r\n\r\n  remove(task: Task) {\r\n    //delete para eliminar\r\n    return this.http.delete(`${this.path}/${task.id}`);//${task.id} es el id de la tarea q quiero eliminar\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/tasks/tasks.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app.module';\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';//para poder hacer solicitudes desde mi app\r\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\n\r\nimport { MyApp } from './app.component';\r\nimport { HomePage } from '../pages/home/home';\r\nimport { UsersProvider } from '../providers/users/users';\r\nimport { TasksProvider } from '../providers/tasks/tasks';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    IonicModule.forRoot(MyApp)\r\n  ],\r\n  bootstrap: [IonicApp],\r\n  entryComponents: [\r\n    MyApp,\r\n    HomePage\r\n  ],\r\n  //providers son clases q nos permiten injectarlos a los demas componentes\r\n  //con el patron singleton, es decir, una vez inyectadas no se vuelven a\r\n  //injectar, se reutiliza la misma instancia para toda la app\r\n  providers: [\r\n    StatusBar,\r\n    SplashScreen,\r\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\r\n    UsersProvider,\r\n    TasksProvider,\r\n  ]\r\n})\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\nimport { Platform } from 'ionic-angular';\r\nimport { StatusBar } from '@ionic-native/status-bar';\r\nimport { SplashScreen } from '@ionic-native/splash-screen';\r\n\r\nimport { HomePage } from '../pages/home/home';\r\n@Component({\r\n  templateUrl: 'app.html'\r\n})\r\nexport class MyApp {\r\n  rootPage:any = HomePage;\r\n\r\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\r\n    platform.ready().then(() => {\r\n      // Okay, so the platform is ready and our plugins are available.\r\n      // Here you can do any higher level native things you might need.\r\n      statusBar.styleDefault();\r\n      splashScreen.hide();\r\n    });\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts"],"sourceRoot":""}