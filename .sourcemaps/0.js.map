{"version":3,"sources":["../../src/pages/tasks/tasks.module.ts","../../src/pages/tasks/tasks.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AAUpC;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAR3B,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,yDAAS;aACV;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;aACpC;SACF,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZ5B,iDAAiD;AACP;AACe;AAGK,yBAAwB;AAOtF;IAIE,mBACS,OAAsB,EACtB,SAAoB,EACnB,aAA4B,sBAAqB;;QAFlD,YAAO,GAAP,OAAO,CAAe;QACtB,cAAS,GAAT,SAAS,CAAW;QACnB,kBAAa,GAAb,aAAa,CAAe,sBAAqB;QAL3D,UAAK,GAAW,EAAE,CAAC,sFAAqF;IAOxG,CAAC;IAED,kCAAc,GAAd;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,oCAAmC;aAC7D,SAAS,CAAC,eAAK;YACd,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC,sJAAqJ;QAC1K,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAkD;IAClD,8BAAU,GAAV,UAAW,IAAU,EAAE,QAAgB;QAAvC,iBAWC;QAVC,OAAO,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,8BAA6B;QACxD,IAAM,UAAU,gBACX,IAAI,oDAAmD;SAC3D,CAAC;QACF,UAAU,CAAC,KAAK,GAAG,aAAa,CAAC,sBAAqB;QACtD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,oCAAmC;aACvE,SAAS,CAAC,sBAAY;YACrB,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC,yBAAwB;YAC7D,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,YAAY,CAAC,yIAAwI;QAC9K,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8BAAU,GAAV,UAAW,IAAU,EAAE,QAAgB;QAAvC,iBAMC;QALC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,oCAAmC;aACjE,SAAS,CAAC;YACT,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,2DAA0D;QAC3F,CAAC,CAAC,CAAC;IACL,CAAC;IAtCU,SAAS;QAJrB,wEAAS,CAAC;YACT,QAAQ,EAAE,YAAY;WACG;SAC1B,CAAC;6EAM+B;YACX,6EAAS;UAC8B;;OAPhD,SAAS,CAwCrB;IAAD,CAAC;AAAA;SAxCY,SAAS,e","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TasksPage } from './tasks';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    TasksPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(TasksPage),\r\n  ],\r\n})\r\nexport class TasksPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tasks/tasks.module.ts","//esta pagina se encarga de renderizar las tareas\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\r\n\r\nimport { Task } from './../../models/task.model';//Importamos el modelo\r\nimport { TasksProvider } from './../../providers/tasks/tasks';//Importamos el servicio\r\n\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-tasks',\r\n  templateUrl: 'tasks.html',\r\n})\r\nexport class TasksPage {\r\n\r\n  tasks: Task[] = [];//Usamos el modelo para declarar tasks como un array de Task y lo inicializamos vacio\r\n\r\n  constructor(\r\n    public navCtrl: NavController,\r\n    public navParams: NavParams,\r\n    private tasksProvider: TasksProvider//inyecto el servicio\r\n  ) {\r\n  }\r\n\r\n  ionViewDidLoad() {//Al cargar la pagina\r\n    this.tasksProvider.getAll()//hacemos una solicitud de getAll()\r\n    .subscribe(tasks => {//me subscribo para recibir todas las tareas, tasks me devuelve un Array\r\n      this.tasks = tasks;//Apenas obtener la respuesta le asigno el Array, como los dos son del mismo tipo se van a asignar directamente, this.tasks espera un Array de tareas\r\n    });\r\n  }\r\n\r\n  //updateTask recibe la tarea q queremos actualizar\r\n  updateTask(task: Task, position: number){//recibe la tarea y la posicion\r\n    console.log('antes', task);//Imprime la tarea como llega\r\n    const updateTask = {//Creamos una constante para quitar la programacion reactiva\r\n      ...task//creamos una copia de la tarea q nos esta llegando\r\n    };\r\n    updateTask.title = 'otro titulo';//Cambiamos el titulo\r\n    this.tasksProvider.update(updateTask)//hacemos una solicitud de update()\r\n    .subscribe(responseTask => {//Nos subscribimos para recibir la respuesta de servidor\r\n      console.log('despues', responseTask);//mostramos la respuesta\r\n      this.tasks[position] = responseTask;//Despues de de actualizar la tarea va a ir al array de tareas en la posicition recibida a actualizar la tarea que respondio el servidor\r\n    });\r\n  }\r\n\r\n  deleteTask(task: Task, position: number) {//recibe la tarea y la posicion\r\n    console.log('deleteTask');\r\n    this.tasksProvider.remove(task)//hacemos una solicitud de remove()\r\n    .subscribe(() => {//Nos subscribimos para recibir la respuesta de servidor\r\n      this.tasks.splice(position, 1);//splice busca la posicion recibida y lo elimina del Array\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tasks/tasks.ts"],"sourceRoot":""}